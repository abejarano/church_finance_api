name: Deploy production environment

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE }}
  GOOGLE_CREDENTIALS: ${{ secrets.GCE_SA_KEY }}

jobs:
  verify-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check code Use Node.js 18
        uses: actions/setup-node@v1
        with:
          node-version: 18
      - run: npm ci
      - run: npm run format:check


  build-publish-deploy:
    needs: verify-code
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
          service_account_key: ${{ secrets.GCE_SA_KEY }}
          project_id: ${{ secrets.GCE_PROJECT }}
          export_default_credentials: true

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Build the Docker image
      - name: Build
        run: |-
          docker build --build-arg GOOGLE_CREDENTIALS="$GOOGLE_CREDENTIALS" --tag "gcr.io/$PROJECT_ID/church_financial_api:latest" .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/church_financial_api:latest"

      - name: Deploy
        run: |-
          gcloud compute instances update-container "$GCE_INSTANCE" \
            --zone "$GCE_INSTANCE_ZONE" \
            --container-image "gcr.io/$PROJECT_ID/church_financial_api:latest"