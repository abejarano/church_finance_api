name: Deploy to GCP

on:
  push:
    branches:
      - main

jobs:
  verify-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check code using Node.js 20
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Check code formatting
        run: npm run format:check

      - name: Build code
        run: npm run build

  build-and-deploy:
    needs: verify-code
    runs-on: ubuntu-latest



    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy
        run: |
          echo "$SSH_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key $GCE_USERNAME@$PUBLIC_IP "          
          cd church_finance_api
          export NVM_DIR=\"$HOME/.nvm\"
          [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"
          [ -s \"$NVM_DIR/bash_completion\" ] && . \"$NVM_DIR/bash_completion\"
          
          cd church_finance_api
          git reset --hard HEAD
          git clean -fd
          git pull
          rm -rf dist node_modules
          
          npm ci
          npm run build
          
          docker ps -a --filter "name=church_financial_api" -q | xargs -r docker stop
          docker ps -a --filter "name=church_financial_api" -q | xargs -r docker rm
          
          docker images -q --filter "reference=church_financial_api*" | xargs -r docker rmi
          
          docker build -t church_financial_api . -f Dockerfile
          
          docker run --network church_sion -d --restart=on-failure --env-file ~/env_variables.txt --name church_financial_api -p 5750:8080 church_financial_api
          
          sudo systemctl restart nginx
          "

    env:
      SSH_KEY: ${{ secrets.GCP_SSH_KEY }}
      PUBLIC_IP: ${{ secrets.GCP_PUBLIC_IP }}
      GCE_USERNAME: ${{ secrets.GCP_USERNAME }}
